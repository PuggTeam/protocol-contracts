{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "address payable",
								"name": "account",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "value",
								"type": "uint96"
							}
						],
						"indexed": false,
						"internalType": "struct LibPart.Part[]",
						"name": "creators",
						"type": "tuple[]"
					}
				],
				"name": "Creators",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "hasApproval",
						"type": "bool"
					}
				],
				"name": "DefaultApproval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "address payable",
								"name": "account",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "value",
								"type": "uint96"
							}
						],
						"indexed": false,
						"internalType": "struct LibPart.Part[]",
						"name": "royalties",
						"type": "tuple[]"
					}
				],
				"name": "RoyaltiesSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "baseURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "contractURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "getCreators",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address payable",
								"name": "account",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "value",
								"type": "uint96"
							}
						],
						"internalType": "struct LibPart.Part[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "getRaribleV2Royalties",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address payable",
								"name": "account",
								"type": "address"
							},
							{
								"internalType": "uint96",
								"name": "value",
								"type": "uint96"
							}
						],
						"internalType": "struct LibPart.Part[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "tokenURI",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address payable",
										"name": "account",
										"type": "address"
									},
									{
										"internalType": "uint96",
										"name": "value",
										"type": "uint96"
									}
								],
								"internalType": "struct LibPart.Part[]",
								"name": "creators",
								"type": "tuple[]"
							},
							{
								"components": [
									{
										"internalType": "address payable",
										"name": "account",
										"type": "address"
									},
									{
										"internalType": "uint96",
										"name": "value",
										"type": "uint96"
									}
								],
								"internalType": "struct LibPart.Part[]",
								"name": "royalties",
								"type": "tuple[]"
							},
							{
								"internalType": "bytes[]",
								"name": "signatures",
								"type": "bytes[]"
							}
						],
						"internalType": "struct LibERC721LazyMint.Mint721Data",
						"name": "data",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "mintAndTransfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "hasApproval",
						"type": "bool"
					}
				],
				"name": "setDefaultApproval",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "tokenURI",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "address payable",
										"name": "account",
										"type": "address"
									},
									{
										"internalType": "uint96",
										"name": "value",
										"type": "uint96"
									}
								],
								"internalType": "struct LibPart.Part[]",
								"name": "creators",
								"type": "tuple[]"
							},
							{
								"components": [
									{
										"internalType": "address payable",
										"name": "account",
										"type": "address"
									},
									{
										"internalType": "uint96",
										"name": "value",
										"type": "uint96"
									}
								],
								"internalType": "struct LibPart.Part[]",
								"name": "royalties",
								"type": "tuple[]"
							},
							{
								"internalType": "bytes[]",
								"name": "signatures",
								"type": "bytes[]"
							}
						],
						"internalType": "struct LibERC721LazyMint.Mint721Data",
						"name": "data",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "transferFromOrMint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "updateAccount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"baseURI()": {
					"details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
				},
				"burn(uint256)": {
					"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"tokenByIndex(uint256)": {
					"details": "See {IERC721Enumerable-tokenByIndex}."
				},
				"tokenOfOwnerByIndex(address,uint256)": {
					"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
				},
				"tokenURI(uint256)": {
					"details": "See {IERC721Metadata-tokenURI}."
				},
				"totalSupply()": {
					"details": "See {IERC721Enumerable-totalSupply}."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC721-transferFrom}."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"tokens/contracts/erc-721/ERC721Base.sol": "ERC721Base"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5",
			"license": "MIT",
			"urls": [
				"bzz-raw://a85355cc4f2554f4a8d334336d66b48d616abf1d90ec3d6b602e825c6fe63f0c",
				"dweb:/ipfs/QmTJYtsKJjBy3ShAt4kEjvM6nfVS8ZAFQqE29fG16tUP8d"
			]
		},
		"@openzeppelin/contracts-upgradeable/cryptography/ECDSAUpgradeable.sol": {
			"keccak256": "0xe348c45df01e0705c50ede5063d77111a996722ffb83f0a22979338a32b06887",
			"license": "MIT",
			"urls": [
				"bzz-raw://afd37f4b5b678753c3e4ac2f8b83f921a8fe0adb456600e4408ee8e26ccbb09c",
				"dweb:/ipfs/QmYfP67Yx8nQXFKBrWjhmG2htgbT5LRSymx7gVt4JRZ2j7"
			]
		},
		"@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol": {
			"keccak256": "0x6cd0bc8c149150614ca3d4a3d3d21f844a0ab3032625f34fcfcf1c2c8b351638",
			"license": "MIT",
			"urls": [
				"bzz-raw://aee85054062c8bcc9fdbdfbc92a459e04b4b9437b04c98b820d0772c11aa7268",
				"dweb:/ipfs/QmQZLXFFGNh2qni7fJp9maYU1XoaP77sMBVY3MnFb2Cyed"
			]
		},
		"@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol": {
			"keccak256": "0xc6dbbc2f50a7c104377798a37b2acd1a41c1242544b0bb7a9a7c863f0520eb50",
			"license": "MIT",
			"urls": [
				"bzz-raw://ff3a66f685a49d3750c9b3588770d1ee43ce3cb718e1dc911ac65d8a6d1c1f0d",
				"dweb:/ipfs/QmVK2mdcbZTZ81YQ1rxWWNbYgy3Gpb3yz3L2qtDPTdx9hu"
			]
		},
		"@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol": {
			"keccak256": "0x4784c3f8a520a739dd25d76f514833a653990902d0e21601aed45bda44c87524",
			"license": "MIT",
			"urls": [
				"bzz-raw://359411cc44a4499f37d46562ef3f348db443f9a699138c1797264d20b14697b7",
				"dweb:/ipfs/QmUmeQNUwve4MFCc1ace6zMnstqa8S9SZe1nXG9THcpQ5v"
			]
		},
		"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol": {
			"keccak256": "0x0dd1e9b19801e3e7d900fbf4182d81e1afd23ad7be39504e33df6bbcba91d724",
			"license": "MIT",
			"urls": [
				"bzz-raw://5e30d594df25d0651c2cd6f85d856e5fc9f3dbae68d017e1da33eb3c7e2f1ecc",
				"dweb:/ipfs/QmPgkV99jZr3Zs9ex8dJ5j22oX4wDuDtMCnXNy67bTwgAB"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol": {
			"keccak256": "0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e",
			"license": "MIT",
			"urls": [
				"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305",
				"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol": {
			"keccak256": "0x529f3ab127aace61d7d47f3df7a6a2c42dc79bbb3a0ca459d6a861f33698aee6",
			"license": "MIT",
			"urls": [
				"bzz-raw://dcd2091f8d2b7264c5267aaf72b870f27c5de4eb649313e94836e4b677f7dcfb",
				"dweb:/ipfs/QmRTBY7izTxqBmAxQ7Mth2khWJZ1uPebsjwbPPfbUdL4xx"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol": {
			"keccak256": "0xa981b1f67f60771c18d39e21bad0a2f0f952e2c3faa90b45b982060fc14ee2bd",
			"license": "MIT",
			"urls": [
				"bzz-raw://dcf9db2d0bd009e25874ee428267c45455613c967f29895e94358914fd4c879d",
				"dweb:/ipfs/QmYuwT44WF9imBdokjpuFL27eJVh4jqhmaR8DTdVSG5EhC"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol": {
			"keccak256": "0x53552243cd7de0d57a876cbaee3485d4bdc2b1c7d58ff15447cd623a3ddb5cd0",
			"license": "MIT",
			"urls": [
				"bzz-raw://795c6d0e2058529f2b9e190207bb6dbe208cf793e70cf99999d5bb39029a3887",
				"dweb:/ipfs/QmTDtUmqY2BwMZjqLPEtz4k1c4DLhEt8p2rSAMN9wNJKQd"
			]
		},
		"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
			"keccak256": "0x3dab19bb4a63bcbda1ee153ca291694f92f9009fad28626126b15a8503b0e5ff",
			"license": "MIT",
			"urls": [
				"bzz-raw://ecc8ae8f1f85e11b6f749e147ac298d1d66879f3bfe3d4518b919f7b6151a73b",
				"dweb:/ipfs/QmYXZfcnCd1N1AaxUTfNQjNHJXAAfVGvae6Bte1SfTCKEz"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
			"keccak256": "0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03",
				"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0",
				"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol": {
			"keccak256": "0x6a8e34d051fc71ce49a8a47d050c5b7e77909008c6be7d6780ee9ed87d2d3797",
			"license": "MIT",
			"urls": [
				"bzz-raw://9764cb2c147e132a2c37be98bde62cd1d66011708d0d3077bab6aa58b00b0472",
				"dweb:/ipfs/QmWURB8hvNHKd7J7MoMvCxYHSW9LoZGSSJYFhXNX7o4tow"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol": {
			"keccak256": "0x20714cf126a1a984613579156d3cbc726db8025d8400e1db1d2bb714edaba335",
			"license": "MIT",
			"urls": [
				"bzz-raw://8d6e8cc57f51f6c73eccd5b2dbaf3d8486a35148fe0e8bea4b002fbf2a78f381",
				"dweb:/ipfs/QmawvgjwaqMxyfbFnjxfap1FZ1sPwVgGHaEC41whKdP7N4"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
			"keccak256": "0x8d1ac29b8a8ed3cfebe5d8774b465441ae8931aaca549f84408e0b29a1191964",
			"license": "MIT",
			"urls": [
				"bzz-raw://1ddb2fde1fb47d755362333f64099a63ef37c12f2b4b38f80050cb967952058b",
				"dweb:/ipfs/QmYD25vdrQ1WyzD8png1nStRRPJBmnkf6fY8FthNrKfmmb"
			]
		},
		"@rarible/lazy-mint/contracts/erc-721/IERC721LazyMint.sol": {
			"keccak256": "0x5f85fa9f73eeff8b65b496f02f006f57aa23a2752534d0ec3a4e790773ad9c57",
			"license": "MIT",
			"urls": [
				"bzz-raw://89ba04b9bab86f3b2b08d8e2339b639ab7b977dc5cb3f3474984802773affb0f",
				"dweb:/ipfs/QmWmipRW5BhbTHBGH56cN3paDPSwQTMV58UkfamHAYwJtM"
			]
		},
		"@rarible/lazy-mint/contracts/erc-721/LibERC721LazyMint.sol": {
			"keccak256": "0xf3efe04db7c217283f1f211208f2b6555845431eccc8423576fe11d5d2f22f38",
			"license": "MIT",
			"urls": [
				"bzz-raw://e7004d11f69a68ccc73d17b9b24f7728687572a5bde61cecbc64bc69b412931f",
				"dweb:/ipfs/QmaByTf5Rw4NyN83A2wZyyaviw4xDdDK2g782vzZ5zABo8"
			]
		},
		"@rarible/royalties-upgradeable/contracts/RoyaltiesV2Upgradeable.sol": {
			"keccak256": "0x4f3d5737488618b3501156e39e3f8367da43e810dc8c942f3a3caf4f35f831f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://5096c7f9ffa052d046ca5de7403db55750d3a97e858e804ebf073d9e396ef35a",
				"dweb:/ipfs/QmTphTLVSfHZ6yuLRpvrdSQYKwNKQkEBUkUdXet78gfneT"
			]
		},
		"@rarible/royalties/contracts/LibPart.sol": {
			"keccak256": "0xd0123f7411573a6a7e1527e0d3901913d7642e504ff240d5b7c5b76a28587def",
			"license": "MIT",
			"urls": [
				"bzz-raw://447b449f7f986ecfdea10cbc96ae276877102866353b4f8410fec0bdb357d5ae",
				"dweb:/ipfs/QmatbYwMc1UXCGGH1D9fvgLbLPNdgzBVafYW84B1nJJiRr"
			]
		},
		"@rarible/royalties/contracts/LibRoyaltiesV2.sol": {
			"keccak256": "0xf61719a8f17946a3e49cc9cba266e8e40df616166a5186acefaa09f570f2477b",
			"license": "MIT",
			"urls": [
				"bzz-raw://c69e8d4549f5ae6e74206accf89dcd85c24fc043628bcb0bc2cc35e5a0a072e9",
				"dweb:/ipfs/Qmacor2RvcJKqfJG7ewvMcGkeyyhtJCkW8npDNdUE8hqwx"
			]
		},
		"@rarible/royalties/contracts/RoyaltiesV2.sol": {
			"keccak256": "0x163fec7b8e88a8ca7f6653064f9c3f2e6d429d3bf156ebce32e4c9be5a2900e8",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0c4486b6c73eb951b7feeb83bfaa64f8387b92b1eac483f0ee4aacca7fb26b8",
				"dweb:/ipfs/Qmdh9c58do457AfdnwJgnqBU6vM8EGtnq38QZueTaSmfrY"
			]
		},
		"@rarible/royalties/contracts/impl/AbstractRoyalties.sol": {
			"keccak256": "0x65840b8ea3e8b4f770933a18bde01f03efd5a85927ba16fe82fea687a7fa0834",
			"license": "MIT",
			"urls": [
				"bzz-raw://52f367450db7cd78a05be05aaaa1e91bb212ce16f6049db0a1b82fe295be98c1",
				"dweb:/ipfs/QmedKKzyvF8478NHzSxEiwTX5JrpvFSqiAjTWfDaPJdKjK"
			]
		},
		"@rarible/royalties/contracts/impl/RoyaltiesV2Impl.sol": {
			"keccak256": "0xad33236b2c6b710fd3ef5011ab6b8cee484677f326ae04e01f1d8b78ea9dd5b7",
			"license": "MIT",
			"urls": [
				"bzz-raw://2663ff7c16b2d48a7c7bb7e7e7a2746ddb5a9a60d1775213dcb058d4a60f7ea7",
				"dweb:/ipfs/QmdtErecavncNnFsHQeFZ5ajqwp6zGSChUr6yWQfvgdYH9"
			]
		},
		"tokens/contracts/HasContractURI.sol": {
			"keccak256": "0x3c7253e5d93ae74f4a010f612f7078682877d4590ef2e09780a5d14d08b3e224",
			"license": "MIT",
			"urls": [
				"bzz-raw://712bd8be1e015e2aecc0ed7d76cf308626a3159b83f58a6cfce85dd6ba321044",
				"dweb:/ipfs/QmRw7WkDQFCaZVfKEGN5kRfZV2DcARtG37CE8heNgRSaiZ"
			]
		},
		"tokens/contracts/erc-1271/ERC1271.sol": {
			"keccak256": "0xc28d1c48e7da71d46b3578ac4669e36c1bfad910d4dd4bd6da0c1e950d1f5f01",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f8b0af668281b7f3dc6028d21f7bf7936868e086a632b09aa46b743632cac81",
				"dweb:/ipfs/QmVhEyvcLjNmW8j76EJNkyCZmksEHJ3ZpqoT76URwkysoM"
			]
		},
		"tokens/contracts/erc-1271/ERC1271Validator.sol": {
			"keccak256": "0x39c81bfee18722c5d3dba97052d4811fe4fea485497266b994b33b647ff8e1bc",
			"license": "MIT",
			"urls": [
				"bzz-raw://1c535043c521fa3007d7b83afcaf0da563a9ad2ffbce5afbe4388717ba7eb8e2",
				"dweb:/ipfs/QmZ4iPDBQUhPPZspBZpfxjppaWDKwCgSMDFpHzK7psxnvc"
			]
		},
		"tokens/contracts/erc-721/ERC721Base.sol": {
			"keccak256": "0x7d79560d483adab6e1d2001ae28b7c014129c1449b38573a643004b739e2a62e",
			"license": "MIT",
			"urls": [
				"bzz-raw://dff2725e81aae2aff95a49551aaf3277ef66faa7e6aa3de253cb82921b2f951c",
				"dweb:/ipfs/QmfAHRPtu5YsJ9AWXDqQkoRvF77dy3SX3gJYNJfyEVxkzc"
			]
		},
		"tokens/contracts/erc-721/ERC721BurnableUpgradeable.sol": {
			"keccak256": "0xeb074959501bd7d4eb0e5c0cded632c86af97fb493159d5b68cc1b76b1934f7a",
			"license": "MIT",
			"urls": [
				"bzz-raw://8f12aadb5c9d20863cfcd6eb5cee19336c7936777ae6d2a128025f7af6eb06bf",
				"dweb:/ipfs/QmfMzS9Yq922iS3SZVDV5XhkB32h5Yjdt9tYzr5hR4fbfe"
			]
		},
		"tokens/contracts/erc-721/ERC721DefaultApproval.sol": {
			"keccak256": "0xfc52c7e18bdc4c117025915f85230d0995701d8c4dfc9a781c65e59ea655cc32",
			"license": "MIT",
			"urls": [
				"bzz-raw://4856d723feca1683e4f09da99d721c50fdde29ec8919f67d34cbaf10aaec643d",
				"dweb:/ipfs/Qmb6XsMVRrHv2cpjwnTSiGkFnbnffkrfrfiFUBwtTxXW6M"
			]
		},
		"tokens/contracts/erc-721/ERC721Lazy.sol": {
			"keccak256": "0x0a8f103b15a5931a45315fc186dc77ff07204fb24f22cdcc94c065a04b0ffab1",
			"license": "MIT",
			"urls": [
				"bzz-raw://665db010d16295f5885b5bfb5e8a1067313707263badc6a27ba9f2708e9fcb02",
				"dweb:/ipfs/QmYHNDGwGp2vt9KWKva9AYB372T9pVpF78Lybbd3ajxgKH"
			]
		},
		"tokens/contracts/erc-721/ERC721Upgradeable.sol": {
			"keccak256": "0x7e4f90572b3cc38f8bbb93a34a2413f0f154955b1bc2890e537c933c14677efd",
			"license": "MIT",
			"urls": [
				"bzz-raw://6dc4c884556daeab7538578bd1976cdff08ea5ff47b91a333faeb5c08ad1f764",
				"dweb:/ipfs/QmSPFdwteRSvWtpKJ8rcSDKS9aJr9oNi2kmpomSLxCfTYX"
			]
		},
		"tokens/contracts/erc-721/Mint721Validator.sol": {
			"keccak256": "0x34cbdcc5d63a79613a8722a4488502e71959075bdf1448e7f26d814970167929",
			"license": "MIT",
			"urls": [
				"bzz-raw://e0b21218a38e1e49315eabbd9571888cd0e1fd1d06c6a25cee6f3a87f130dc91",
				"dweb:/ipfs/QmfH9mXp6uknQTYizVYkUP17LBNaP71c6phvZP7Kt8UP3L"
			]
		}
	},
	"version": 1
}